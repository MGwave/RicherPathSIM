\hline
\end{tabular}

\begin{tabular}{|c|c|c|c|}
\hline
Rank & Paper & Citations \footnotemark[1] & NeighborSim Score\\
\hline
\textbf{1} & \textbf{Mining Association Rules between Sets} & \textbf{258} & \textbf{1.0} \\
 & \textbf{of Items in Large Databases} &  &  \\
2 & Fast Algorithms for Mining & 305 & 0.684 \\
 & Association Rules in Large Databases &  &  \\
3 & Mining Sequential Patterns & 106 & 0.465 \\
4 & Beyond Market Baskets: Generalizing & 54 & 0.457 \\
 & Association Rules to Correlations &  &  \\
5 & An Effective Hash Based & 60 & 0.438 \\
 & Algorithm for Mining Association Rules &  &  \\
6 & BIRCH: An Efficient Data Clustering & 126 & 0.427 \\
 & Method for Very Large Databases &  &  \\
7 & Mining Frequent Patterns & 73 & 0.417 \\
 & without Candidate Generation &  &  \\
8 & Discovery of Multiple-Level Association & 46 & 0.394 \\
 & Rules from Large Databases &  &  \\
9 & Exploratory Mining and Pruning & 47 & 0.39 \\
 & Optimizations of Constrained Association Rules &  &  \\
10 & Mining Quantitative Association Rules & 65 & 0.384 \\
 & in Large Relational Tables &  &  \\
\hline
\end{tabular}

\begin{tabular}{|c|c|c|c|}
\hline
Rank & Paper & Citations \footnotemark[1] & NeighborSim Score\\
\hline
\textbf{1} & \textbf{R-Trees: A Dynamic Index} & \textbf{3} & \textbf{1.0} \\
 & \textbf{Structure for Spatial Searching} &  &  \\
2 & A Raster Approximation For & 2 & 0.56 \\
 & Processing of Spatial Joins &  &  \\
3 & A New Method for Similarity & 4 & 0.483 \\
 & Indexing of Market Basket Data &  &  \\
4 & A Fast Algorithm to & 2 & 0.444 \\
 & Cluster High Dimensional Basket Data &  &  \\
5 & Correlating XML data streams & 1 & 0.4 \\
 & using tree-edit distance embeddings &  &  \\
6 & Multidimensional Access Methods: & 3 & 0.348 \\
 & Trees Have Grown Everywhere &  &  \\
7 & Efficient and Tunable & 3 & 0.348 \\
 & Similar Set Retrieval &  &  \\
8 & Performance Characteristics of Protocols & 2 & 0.333 \\
 & With Ordered Shared Locks &  &  \\
9 & Duplicate detection in click streams & 3 & 0.308 \\
10 & The A-tree: An Index Structure & 11 & 0.294 \\
 & for High-Dimensional Spaces Using Relative Approximation &  &  \\
\hline
\end{tabular}

\begin{tabular}{|c|c|c|c|}
\hline
Rank & Paper & Citations \footnotemark[1] & NeighborSim Score\\
\hline
\hline
\end{tabular}

\begin{tabular}{|c|c|c|c|}
\hline
Rank & Paper & Citations \footnotemark[1] & NeighborSim Score\\
\hline
\hline
\end{tabular}

\begin{tabular}{|c|c|c|c|}
\hline
Rank & Paper & Citations \footnotemark[1] & NeighborSim Score\\
\hline
\textbf{1} & \textbf{Handling frequent updates} & \textbf{1} & \textbf{1.0} \\
 & \textbf{of moving objects} &  &  \\
2 & R-trees with Update Memos & 1 & 1.0 \\
3 & Supporting Frequent Updates in & 1 & 1.0 \\
 & R-Trees: A Bottom-Up Approach &  &  \\
4 & An Evaluation of & 2 & 0.75 \\
 & Generic Bulk Loading Techniques &  &  \\
5 & R-Tree Based Indexing & 2 & 0.444 \\
 & of Now-Relative Bitemporal Data &  &  \\
6 & The Geometry of Uncertainty & 1 & 0.4 \\
 & in Moving Objects Databases &  &  \\
7 & TIP: A Temporal Extension to Informix & 1 & 0.333 \\
8 & Efficient integration and & 1 & 0.333 \\
 & aggregation of historical information &  &  \\
9 & Towards Optimal Indexing & 1 & 0.333 \\
 & for Segment Databases &  &  \\
10 & Database Snapshots & 1 & 0.333 \\
